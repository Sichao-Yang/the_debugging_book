<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (20230911.1827)
 -->
<!-- Pages: 1 -->
<svg width="484pt" height="529pt"
 viewBox="0.00 0.00 483.62 528.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 524.5)">
<g id="a_graph0"><a xlink:title="TypeAnnotator class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-524.5 479.62,-524.5 479.62,4 -4,4"/>
</a>
</g>
<!-- TypeAnnotator -->
<g id="node1" class="node">
<title>TypeAnnotator</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class TypeAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="0,-6.12 0,-95.62 142,-95.62 142,-6.12 0,-6.12"/>
<text text-anchor="start" x="23.75" y="-79.33" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeAnnotator</text>
<polyline fill="none" stroke="black" points="0,-70.38 142,-70.38"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="TypeAnnotator">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `typed_functions()`">
<text text-anchor="start" x="8" y="-57.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="typed_function(self, function_name: str) &#45;&gt; str:&#10;Return the code for all calls of `function_name` observed, annotated with types">
<text text-anchor="start" x="8" y="-46.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="typed_function_ast(self, function_name: str) &#45;&gt; Optional[ast.AST]:&#10;Return an AST for all calls of `function_name` observed, annotated with types">
<text text-anchor="start" x="8" y="-35.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function_ast()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="typed_functions(self) &#45;&gt; str:&#10;Return the code for all functions observed, annotated with types">
<text text-anchor="start" x="8" y="-24.12" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="typed_functions_ast(self) &#45;&gt; Dict[str, ast.AST]:&#10;Return a dict name &#45;&gt; AST for all functions observed, annotated with types">
<text text-anchor="start" x="8" y="-12.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions_ast()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer -->
<g id="node2" class="node">
<title>TypeTracer</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class TypeTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="58.5,-153.75 58.5,-189.75 143.5,-189.75 143.5,-153.75 58.5,-153.75"/>
<text text-anchor="start" x="66.5" y="-168.45" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeTracer</text>
</a>
</g>
</g>
<!-- TypeAnnotator&#45;&gt;TypeTracer -->
<g id="edge1" class="edge">
<title>TypeAnnotator&#45;&gt;TypeTracer</title>
<path fill="none" stroke="black" d="M82.09,-95.8C86.02,-111.41 90.35,-128.54 93.87,-142.49"/>
<polygon fill="none" stroke="black" points="90.4,-143.04 96.24,-151.88 97.18,-141.33 90.4,-143.04"/>
</g>
<!-- CallTracer -->
<g id="node3" class="node">
<title>CallTracer</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class CallTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="109,-242.25 109,-365.5 209,-365.5 209,-242.25 109,-242.25"/>
<text text-anchor="start" x="127.88" y="-349.2" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CallTracer</text>
<polyline fill="none" stroke="black" points="109,-340.25 209,-340.25"/>
<g id="a_node3_6"><a xlink:href="#" xlink:title="CallTracer">
<g id="a_node3_7"><a xlink:href="#" xlink:title="__init__(self, log: bool = False, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="117" y="-327.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_8"><a xlink:href="#" xlink:title="add_call(self, function_name: str, arguments: List[Tuple[str, Any]], return_value: Any = None) &#45;&gt; None:&#10;Add given call to list of calls">
<text text-anchor="start" x="117" y="-315.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">add_call()</text>
</a>
</g>
<g id="a_node3_9"><a xlink:href="#" xlink:title="all_calls(self) &#45;&gt; Dict[str, List[Tuple[List[Tuple[str, Any]], Any]]]:&#10;Return list of calls for function_name,&#10;or a mapping function_name &#45;&gt; calls for all functions tracked">
<text text-anchor="start" x="117" y="-304.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_calls()</text>
</a>
</g>
<g id="a_node3_10"><a xlink:href="#" xlink:title="calls(self, function_name: str) &#45;&gt; List[Tuple[List[Tuple[str, Any]], Any]]:&#10;Return list of calls for `function_name`.">
<text text-anchor="start" x="117" y="-293" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">calls()</text>
</a>
</g>
<g id="a_node3_11"><a xlink:href="#" xlink:title="reset(self) &#45;&gt; None">
<text text-anchor="start" x="117" y="-281.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">reset()</text>
</a>
</g>
<g id="a_node3_12"><a xlink:href="#" xlink:title="trace_call(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Save current function name and args on the stack">
<text text-anchor="start" x="117" y="-270.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_call()</text>
</a>
</g>
<g id="a_node3_13"><a xlink:href="#" xlink:title="trace_return(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Get return value and store complete call with arguments and return value">
<text text-anchor="start" x="117" y="-259.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_return()</text>
</a>
</g>
<g id="a_node3_14"><a xlink:href="#" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracking function: Record all calls and all args">
<text text-anchor="start" x="117" y="-249" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer&#45;&gt;CallTracer -->
<g id="edge2" class="edge">
<title>TypeTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M108.7,-190.03C113.61,-201.03 120.32,-216.1 127.25,-231.64"/>
<polygon fill="none" stroke="black" points="123.93,-232.79 131.2,-240.49 130.32,-229.94 123.93,-232.79"/>
</g>
<!-- Tracer -->
<g id="node4" class="node">
<title>Tracer</title>
<g id="a_node4"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="131.5,-402.5 131.5,-438.5 186.5,-438.5 186.5,-402.5 131.5,-402.5"/>
<text text-anchor="start" x="139.5" y="-417.2" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
</a>
</g>
</g>
<!-- CallTracer&#45;&gt;Tracer -->
<g id="edge3" class="edge">
<title>CallTracer&#45;&gt;Tracer</title>
<path fill="none" stroke="black" d="M159,-365.88C159,-374.48 159,-382.96 159,-390.56"/>
<polygon fill="none" stroke="black" points="155.5,-390.5 159,-400.5 162.5,-390.5 155.5,-390.5"/>
</g>
<!-- StackInspector -->
<g id="node5" class="node">
<title>StackInspector</title>
<g id="a_node5"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="76,-475.5 76,-520 242,-520 242,-475.5 76,-475.5"/>
<text text-anchor="start" x="112.5" y="-503.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="76,-494.75 242,-494.75"/>
<g id="a_node5_15"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node5_16"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {}">
<text text-anchor="start" x="84" y="-481.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Tracer&#45;&gt;StackInspector -->
<g id="edge4" class="edge">
<title>Tracer&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M159,-438.95C159,-446.36 159,-455.24 159,-463.79"/>
<polygon fill="none" stroke="black" points="155.5,-463.57 159,-473.57 162.5,-463.57 155.5,-463.57"/>
</g>
<!-- InvariantAnnotator -->
<g id="node6" class="node">
<title>InvariantAnnotator</title>
<g id="a_node6"><a xlink:href="#" xlink:title="class InvariantAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="160,-0.5 160,-101.25 338,-101.25 338,-0.5 160,-0.5"/>
<text text-anchor="start" x="191.62" y="-84.95" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantAnnotator</text>
<polyline fill="none" stroke="black" points="160,-76 338,-76"/>
<g id="a_node6_17"><a xlink:href="#" xlink:title="InvariantAnnotator">
<g id="a_node6_18"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `functions_with_invariants()`">
<text text-anchor="start" x="168" y="-63.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node6_19"><a xlink:href="#" xlink:title="function_with_invariants(self, function_name: str) &#45;&gt; str:&#10;Return the code of `function_name`, annotated with invariants">
<text text-anchor="start" x="168" y="-52.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">function_with_invariants()</text>
</a>
</g>
<g id="a_node6_20"><a xlink:href="#" xlink:title="functions_with_invariants(self) &#45;&gt; str:&#10;Return the code of all observed functions, annotated with invariants">
<text text-anchor="start" x="168" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">functions_with_invariants()</text>
</a>
</g>
<g id="a_node6_21"><a xlink:href="#" xlink:title="postconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined postconditions for `function_name`">
<text text-anchor="start" x="168" y="-29.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">postconditions()</text>
</a>
</g>
<g id="a_node6_22"><a xlink:href="#" xlink:title="preconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined preconditions for `function_name`">
<text text-anchor="start" x="168" y="-18.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">preconditions()</text>
</a>
</g>
<g id="a_node6_23"><a xlink:href="#" xlink:title="params(self, function_name: str) &#45;&gt; str">
<text text-anchor="start" x="168" y="-6.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">params()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantTracer -->
<g id="node7" class="node">
<title>InvariantTracer</title>
<g id="a_node7"><a xlink:href="#" xlink:title="class InvariantTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="177,-138.25 177,-205.25 289,-205.25 289,-138.25 177,-138.25"/>
<text text-anchor="start" x="188.38" y="-188.95" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantTracer</text>
<polyline fill="none" stroke="black" points="177,-180 289,-180"/>
<g id="a_node7_24"><a xlink:href="#" xlink:title="InvariantTracer">
<g id="a_node7_25"><a xlink:href="#" xlink:title="__init__(self, props: Optional[List[str]] = None, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="185" y="-167.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node7_26"><a xlink:href="#" xlink:title="all_invariants(self) &#45;&gt; Dict[str, Set[Tuple[str, Tuple[str, ...]]]]">
<text text-anchor="start" x="185" y="-155.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_invariants()</text>
</a>
</g>
<g id="a_node7_27"><a xlink:href="#" xlink:title="invariants(self, function_name: str) &#45;&gt; Set[Tuple[str, Tuple[str, ...]]]">
<text text-anchor="start" x="185" y="-144" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">invariants()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantAnnotator&#45;&gt;InvariantTracer -->
<g id="edge5" class="edge">
<title>InvariantAnnotator&#45;&gt;InvariantTracer</title>
<path fill="none" stroke="black" d="M242.31,-101.6C241.19,-109.9 240.04,-118.47 238.94,-126.62"/>
<polygon fill="none" stroke="black" points="235.5,-125.92 237.64,-136.29 242.44,-126.85 235.5,-125.92"/>
</g>
<!-- InvariantTracer&#45;&gt;CallTracer -->
<g id="edge6" class="edge">
<title>InvariantTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M214.33,-205.59C209.7,-213.71 204.57,-222.74 199.35,-231.92"/>
<polygon fill="none" stroke="black" points="196.32,-230.18 194.42,-240.6 202.4,-233.64 196.32,-230.18"/>
</g>
<!-- Legend -->
<g id="node8" class="node">
<title>Legend</title>
<text text-anchor="start" x="356.38" y="-66.88" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="356.38" y="-56.88" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="362.38" y="-56.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="356.38" y="-46.88" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="362.38" y="-46.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="356.38" y="-36.88" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="362.38" y="-36.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="356.38" y="-27.82" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
